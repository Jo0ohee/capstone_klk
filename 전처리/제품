import sys
import pymysql
import pandas as pd
from datetime import timedelta

if len(sys.argv) != 3:
    print("Usage: python date_operator_db.py <start_date> <end_date>")
    sys.exit(1)

date1 = pd.to_datetime(sys.argv[1])
date2 = pd.to_datetime(sys.argv[2])

date2 = date2 + pd.Timedelta(hours=23, minutes=59, seconds=59)

print(f"Start Date: {date1}")
print(f"End Date: {date2}")

conn = pymysql.connect(
    host='localhost',
    user='root',
    password='1234',
    db='smartfactorydb',
    charset='utf8'
)

query = "SELECT * FROM eventTBL"
data_sql = pd.read_sql(query, conn)

query1 = "SELECT CODE FROM plmtbl"
code_sql = pd.read_sql(query1, conn)

data = data_sql[(data_sql['TIME'] >= date1) & (data_sql['TIME'] <= date2)]
codes = code_sql['CODE'].tolist()

results = {code: {
    'input' : 0,
    'true' : 0,
    'false' : 0
} for code in codes}

def calculate_code_metrics(data, codes, results):
    for code in codes:
        code_data = data[data['CODE'] == code]

        for serial, serial_data in code_data.groupby('SERIAL'):
            process_data = serial_data[(serial_data['PROCESS'] == 'PNT03') & (serial_data['TYPE'] == 'STOP')]

            operator_pass = process_data[(process_data['ID'].str.startswith('OP'))]['PASS'].tolist()
            equipment_pass = process_data[(process_data['ID'].str.startswith('EQ'))]['PASS'].tolist()

            if not operator_pass:
                operator_pass = ['TRUE']
            if not equipment_pass:
                equipment_pass = ['TRUE']

            if 'FALSE' in operator_pass or 'FALSE' in equipment_pass:
                results[code]['false'] += 1
            else:
                results[code]['true'] += 1

    for code in codes:
        results[code]['input'] = results[code]['true'] + results[code]['false']
calculate_code_metrics(data, codes, results)


cursor = conn.cursor()
query = """
    UPDATE plmtbl
    SET PLM_TOTAL_INPUT = %s,
        PLM_TOTAL_TRUE = %s,
        PLM_TOTAL_FAIL = %s
    WHERE CODE = %s
"""

for code, data in results.items():
    values = (
        data['input'],
        data['true'],
        data['false'],
        code_sql
    )
    cursor.execute(query, values)
conn.commit()
cursor.close()
conn.close()

print("Database update complete.")

for code, result in results.items():
    print(f"{code}: {result}")
